@page "/accounttypes"
@using TanglewoodCandleCo.Shared.dbo

@if (AccountTypeList == null)
{
    <TwSpinner LoadingName="Account Types"></TwSpinner>
}
else
{
    <div class="tw-page container-fluid">
        <div class="align-text-top">
            <div class="btn-group float-right">
                <button type="button" class="btn btn-success btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    Account Types
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @recordCount
                        <span class="visually-hidden">unread messages</span>
                    </span>
                </button>
                <ul class="dropdown-menu">
                    <li><a href="javascript:void(0);" class="dropdown-item" onclick="@(() => AddAccountType())">
                            <Icon Name="IconName.PlusCircleFill" Size="IconSize.None" Color="IconColor.Success" /> Create
                        </a>
                    </li>
                    <li><a href="javascript:void(0);" class="dropdown-item">Bulk Add</a></li>
                    <li><a href="javascript:void(0);" class="dropdown-item">Report On</a></li>
                </ul>
            </div>
            <div class="page-title">
                Account Types
            </div>
        </div>

    </div>
    
    <Grid @ref="accountTypeGrid"
          TItem="AccountType"
          AllowSorting="true"
          Class="table table-hover"
          Data="AccountTypeList"
          AllowPaging="true"
          PageSize="20"
          AllowRowClick="true"
          OnRowClick="OnRowClick"
          HeaderRowCssClass="bg-success text-white border-bottom-0"
          Responsive="true">
        <GridColumn TItem="AccountType" Context="ac" HeaderText="Name" PropertyName="Name" SortKeySelector="item => item.Name">
            <a href="javascript:void(0);" onclick="@(() => ShowAccountTypeDetails(1))">
                @ac.Name
            </a>
        </GridColumn>
        <GridColumn TItem="AccountType" HeaderText="Active" PropertyName="IsActive">
            @context.IsActive
        </GridColumn>
    </Grid>
}

<Offcanvas @ref="offcanvasAdd" Class="tw-popright" Size="OffcanvasSize.Small">
    <FooterTemplate>
        <Button Color="ButtonColor.Primary" Size="Size.Small" @onclick="OnHideOffcanvasClick">Cancel</Button>
    </FooterTemplate>
</Offcanvas>
<Offcanvas @ref="offcanvas" Class="tw-popright" Size="OffcanvasSize.Large" />
