@* 
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IAccessTokenProvider TokenProvider
*@
<nav class="navbar navbar-expand-lg bg-body-tertiary" style="z-index:100; position:sticky; top: 0">
    <div class="container-fluid">
        <a class="navbar-brand" title="home" href="/">
            <img class="sidebar-logo" id="logo" src="images/TW_logotype_white_notopflame.png" style="width:150px;" />
        </a>
        <button class="navbar-toggler btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <Button Color="ButtonColor.Success" Size="Size.Small">
                <a class="nav-link active" aria-current="page" href="#"><Icon Name="IconName.HouseDoor" /> Home</a>
            </Button>
            &nbsp;
            <AuthorizeView>
            <Authorized>
                    <Dropdown Size="Size.Small" Split="true">
                <DropdownActionButton Color="ButtonColor.Success"><Icon Name="IconName.Joystick" /> Types</DropdownActionButton>
                        <DropdownToggleButton Color="ButtonColor.Success" />
                        <DropdownMenu>
                            <DropdownItem To="accounttypes" Type="ButtonType.Link">Account Types</DropdownItem>
                            <DropdownItem To="#" Type="ButtonType.Link">Purchases</DropdownItem>
                            <DropdownItem To="#" Type="ButtonType.Link">Fragrance</DropdownItem>
                        </DropdownMenu>
                    </Dropdown>
               </Authorized>
             </AuthorizeView>

            <ul class="navbar-nav me-auto mb-2 mb-lg-0"></ul>

            <div class="nav-item px-1">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <AuthorizeView>
                        <Authorized>
                            <Button Color="ButtonColor.Success" Size="Size.Small">
                                <a href="/Account/logout">Logout</a>
                            </Button>
                            <strong>Hello, @(context?.User?.FindFirst("fullname").Value)!</strong>
                        </Authorized>
                        <NotAuthorized>
                            <Button Color="ButtonColor.Danger" Size="Size.Small" Outline="true">
                                <a href="/Account/login"><Icon Name="IconName.Key" /> login</a>
                            </Button>
                        </NotAuthorized>
                    </AuthorizeView>
                </ul>
            </div>
            @* <button @onclick="WriteToken">Write Token</button> *@
        </div>
    </div>
</nav>

@code {
    // public async Task WriteToken()
    // {
    //     var tokenResult = await TokenProvider.RequestAccessToken();
    //     if (tokenResult.TryGetToken(out var token))
    //     {
    //         System.Diagnostics.Debug.WriteLine(token.Value);
    //     }
    // }
}