# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  artifactstagingdirectoryServer: 'server'
  artifactstagingdirectoryClient: 'client'

steps:
- task: NuGetToolInstaller@1
  displayName: Install .NET Tools

- task: NuGetCommand@2
  displayName: Restore Wasm Solution
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@1
  displayName: Build Wasm Server
  inputs:
    command: 'build'
    projects: '**/Server/TanglewoodCandleCo.Wasm.Server.csproj'

- task: DotNetCoreCLI@2
  displayName: Build Wasm Client
  inputs:
    command: 'build'
    projects: '**/Client/TanglewoodCandleCo.Wasm.Client.csproj'

- task: DotNetCoreCLI@1
  displayName: 'Publish Wasm Server'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectoryServer)'
    projects: '**/Server/TanglewoodCandleCo.Wasm.Server.csproj'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish Wasm Client'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectoryClient)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Wasm Server Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectoryServer)'
  condition: succeededOrFailed()
  
- task: PublishBuildArtifacts@1
  displayName: 'Publish Web Client Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectoryClient)'
  condition: succeededOrFailed()